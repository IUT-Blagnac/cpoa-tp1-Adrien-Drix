@startuml

' definitions
' -----------

package "ComportementBenOuais.ComportementArme" {
interface ComportementArmeDeTir
interface ComportementArmeDeuxMains
interface ComportementArmeUneMain
}

package "Arme" {
class Arbalete
class Arc
class Bouclier
class Claymore
class Dague
class Epee
class Massue
}

package "Monstre" {
class Orc
class Bandit
class Squelette
class Ogre
}

package "Menu" {
class Menu
}

package "Base" {
class Berserker
class Chevalier
class Humain
abstract Personnages.Personnage
class Ranger
class Rodeur
class Troll
class Voleur
}

' content
' -------

' Arc:
ComportementArmeDeTir <|.. Arc
Arc : void UtiliserArme()
Arc : String toString()

' ComportementArmeUneMain:
ComportementArmeUneMain : void UtiliserArme()

' ComportementArmeDeuxMains:
ComportementArmeDeuxMains : void UtiliserArme()

' Troll:
Personnages.Personnage <|-- Troll

' Bouclier:
ComportementArmeUneMain <|.. Bouclier
Bouclier : void UtiliserArme()
Bouclier : String toString()

' Personnages.Personnage:
Personnages.Personnage --> "1" ComportementArmeDeuxMains
Personnages.Personnage --> "1" ComportementArmeDeTir
Personnages.Personnage --> "1" ComportementArmeUneMain
Personnages.Personnage : void CombattreAuCac()
Personnages.Personnage : void CombattreADistance()
Personnages.Personnage : void ChangerMain()
Personnages.Personnage : void SetArme(ComportementArmeDeuxMains)
Personnages.Personnage : void SetArmeDroite(ComportementArmeUneMain)
Personnages.Personnage : void SetArmeGauche(ComportementArmeUneMain)
Personnages.Personnage : void SetArmeDistance(ComportementArmeDeTir)
Personnages.Personnage : ComportementArmeDeuxMains GetArmeDeuxMains()
Personnages.Personnage : ComportementArmeUneMain GetArmeMainGauche()
Personnages.Personnage : ComportementArmeUneMain GetArmeMainDroite()
Personnages.Personnage : ComportementArmeDeTir GetArmeDistance()
Personnages.Personnage : String toString()

' Orc:
Personnages.Personnage <|- Orc

' Humain:
Personnages.Personnage <|-- Humain

' ComportementArmeDeTir:
ComportementArmeDeTir : void UtiliserArme()

' Voleur:
Personnages.Personnage <|-- Voleur

' Chevalier:
Personnages.Personnage <|-- Chevalier

' Arbalete:
ComportementArmeDeTir <|.. Arbalete
Arbalete : void UtiliserArme()
Arbalete : String toString()

' Rodeur:
Personnages.Personnage <|-- Rodeur

' Berserker:
Personnages.Personnage <|-- Berserker

' Ogre:
Personnages.Personnage <|- Ogre

' Ranger:
Personnages.Personnage <|-- Ranger

' Menu:
Menu : Scanner sc
Menu ..> Personnages.Personnage
Menu : void Menu()
Menu : void etape0()
Menu : void etape1()
Menu : void etape2()
Menu : void etape3()
Menu : void etape4()
Menu : void quitter()
Menu : void main(String)
Menu : void LancementDuJeu()

' Bandit:
Personnages.Personnage <|- Bandit

' Epee:
ComportementArmeUneMain <|.. Epee
Epee : void UtiliserArme()
Epee : String toString()

' Claymore:
ComportementArmeDeuxMains <|.. Claymore
Claymore : void UtiliserArme()
Claymore : String toString()

' Squelette:
Personnages.Personnage <|- Squelette

' Dague:
ComportementArmeUneMain <|.. Dague
Dague : void UtiliserArme()
Dague : String toString()

' Massue:
ComportementArmeDeuxMains <|.. Massue
Massue : void UtiliserArme()
Massue : String toString()

@enduml
